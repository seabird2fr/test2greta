security:

    encoders:
        # use your user class name here
        App\Entity\User:
            # Use native password encoder
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: null }
        in_database: # nom arbitraire 
            entity: 
                class: App\Entity\User # entité qui sert à voir ou sont les utilisateurs 
                property: email # propriété de l'utilisateur qui permet de l'authentifier 


    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            pattern: ^/admin
            anonymous: true

            provider: in_database
            form_login:
                login_path: admin_account_login
                check_path: admin_account_login
                default_target_path: admin_ads_index

            logout:
                path: admin_account_logout

                target: homepage



        main:
            anonymous: lazy

            provider: in_database
            form_login:
                login_path: account_login
                check_path: account_login
                default_target_path: homepage

            logout:
                path: account_logout

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
